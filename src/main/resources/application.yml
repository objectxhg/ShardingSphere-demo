
server:
  port: 9010
  servlet:
    context-path: /ShardingSphere


sharding:
  jdbc:
    datasource:
      names: ds0,ds1
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ShardingSphere?characterEncoding=utf-8&&serverTimezone=GMT%2B8
        username: root
        password: 123456
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/testbootdemo?characterEncoding=utf-8&&serverTimezone=GMT%2B8
        username: root
        password: 123456

    config:
      sharding:
        # 分表策略 其中user为逻辑表 分表主要取决于age行
        tables:
          user:
            actual-data-nodes: ds0.user_$->{0..1}
            key-generate-strategy: id
            key-generator-name: SNOWFLAKE
            table-strategy:
              inline:
                sharding-column: id
                #分片算法表达式
                algorithm-expression: user_$->{id % 2}
        props:
          sql:
            show: true

# 当遇到相同名字时允许覆盖注册
spring:
  # 由于表分片 数据库中多个表结构对应一个实体类 放不进去 所有需要开启覆盖注册
  main:
    allow-bean-definition-overriding: true



mybatis-plus:
  mapper-locations: classpath:mapper/*.xml




